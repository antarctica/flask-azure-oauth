---

# == Notes ==

# - GitLab automatically passes artifacts from previous stages by default
# - Set required secret variables at: https://gitlab.data.bas.ac.uk/web-apps/flask-extensions/flask-azure-oauth/-/settings/ci_cd

# = Secret variables
# - Variables are grouped by section in KEY: "value" format (e.g. FOO: "bar")
#   Sensitive values are represented by "[Sensitive]"
#
# - PyPi (production) - create tokens at https://pypi.org/manage/account/
# > PYPI_TOKEN (protected): "[Sensitive]"
#
# - PyPi (staging) - create tokens at https://test.pypi.org/manage/account/
# > PYPI_TEST_TOKEN (protected): "[Sensitive]"

# == Global settings ==

stages:
  - ðŸ’¥ setup
  - ðŸ§ª test
  - ðŸ“¦ package
  - ðŸšš publish

variables:
  APP_NAME: flask-azure-oauth

image:
  name: docker-registry.data.bas.ac.uk/web-apps/flask-extensions/flask-azure-oauth:latest
  entrypoint: [""]

# == Jobs ==

version:
  stage: ðŸ’¥ setup
  image:
    name: docker-registry.data.bas.ac.uk/magic/infrastructure/python-version-parser:latest
    entrypoint: [""]
  before_script:
    - "python3 /usr/src/app/python_version_parser $(git describe --tags) > _version && export VERSION=$(cat _version)"
    - "export VERSION=${VERSION:-0.0.0}"
  script:
    - 'echo $VERSION'
    - 'echo "VERSION=$VERSION" >> build.env'
  needs: []
  artifacts:
    reports:
      dotenv: build.env

tests:
  stage: ðŸ§ª test
  before_script:
    - "cp support/python-tests-junit/tests.py ./"
  script:
    - "python ./tests.py"
  needs: []
  artifacts:
    reports:
      junit: test-results.xml

black:
  stage: ðŸ§ª test
  script:
    - "black --check flask_azure_oauth/"
  needs: []

bandit:
  stage: ðŸ§ª test
  script:
    - "bandit -r ."
  needs: []

package:
  stage: ðŸ“¦ package
  script:
    - 'poetry build'
  needs:
    - job: tests
    - job: version
      artifacts: true
  artifacts:
    paths:
      - dist
    expire_in: 1 week

pypi-testing:
  stage: ðŸšš publish
  before_script:
    - "poetry config pypi-token.pypi-testing $PYPI_TEST_TOKEN --local"
  script:
    - "poetry version $VERSION"
    - "poetry publish --repository pypi-testing --no-interaction"
  needs:
    - job: version
      artifacts: true
    - job: package
      artifacts: true
  only:
    - master
  environment:
    name: staging
    url: https://test.pypi.org/project/flask-azure-oauth/

pypi:
  stage: ðŸšš publish
  before_script:
    - "poetry config pypi-token.pypi $PYPI_TOKEN --local"
    - "poetry version $VERSION"
  script:
    - "poetry publish --repository pypi --no-interaction"
  needs:
    - job: version
      artifacts: true
    - job: package
      artifacts: true
  only:
    - tags
  environment:
    name: production
    url: https://pypi.org/project/flask-azure-oauth/
