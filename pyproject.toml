[tool.poetry]
name = "flask-azure"
version = "0.1.0"
description = "Experiment to update how access to a Flask app can be controlled using Azure/Entra ID."
authors = ["Felix Fennell <felnne@bas.ac.uk>"]
readme = "README.md"
license = "MIT"
packages = [{include = "flask_azure", from = "src"}]

[tool.poetry.dependencies]
python = "^3.9"
flask = "^3.0.3"
pyjwt = {extras = ["crypto"], version = "^2.9.0"}
requests = "^2.32.3"
authlib = "^1.3.1"

[tool.poetry.group.dev.dependencies]
ruff = "^0.5.6"

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["ANN201", "S101"]
#   tests/* |   S101 | ignore use of assert

[tool.pytest.ini_options]
addopts = "--strict-markers --random-order -x --ff"
# --strict-markers | fail if unknown markers are used
# --random-order   | run tests in random order
# -x               | stop after first failure [Overriden in CI]
# --ff             | run failed tests first
markers = [
  "cov: coverage checks (deselect with '-m \"not cov\"')"
]

[tool.poetry.group.test.dependencies]
pytest = "^8.3.2"
pytest-cov = "^5.0.0"

[tool.coverage.report]
skip_empty = true
show_missing = false
fail_under = 100
exclude_lines = ["@abstractmethod"]

[tool.coverage.html]
directory = "htmlcov"

[tool.coverage.run]
branch = true
source = ["src"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
